"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[931],{8968:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"cloning","title":"Cloning States","description":"Use Val","source":"@site/docs/cloning.md","sourceDirName":".","slug":"/cloning","permalink":"/Val/docs/cloning","draft":false,"unlisted":false,"editUrl":"https://github.com/TumbleWede/Val/edit/main/docs/cloning.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"defaultSidebar","previous":{"title":"Destroying States","permalink":"/Val/docs/destroy"},"next":{"title":"Batching","permalink":"/Val/docs/batching"}}');var a=t(4848),o=t(8453);const i={sidebar_position:7},r="Cloning States",c={},l=[];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"cloning-states",children:"Cloning States"})}),"\n",(0,a.jsx)(n.h1,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"Val:copy()"})," to clone a state:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"local a = Val.new(20)\r\nlocal b = a:copy()\r\nprint(a == b) -- false (implying b is a separate state)\r\nprint(a:eq(b)) -- true\r\na:set(10)\r\nprint(b:get()) -- 20\n"})}),"\n",(0,a.jsxs)(n.p,{children:["However, ",(0,a.jsx)(n.code,{children:"Val:copy()"})," only creates a shallow clone of the state. This means that any object, including internal states, will share the same reference:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"local t1 = Val.scope {\r\n\tVal.new(1),\r\n\tVal.new(2),\r\n\tVal.new(3)\r\n}\r\nlocal t2 = t1:copy()\r\n\r\nt2[1]:die()\r\nprint(t1[1]:isdead()) -- true\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Val currently does not support deep cloning, but this is subject to change in the future if it becomes a significant limitation."})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(6540);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);